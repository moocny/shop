{"version":3,"sources":["views/Home.jsx","components/ProductCard.jsx","views/Category.jsx","views/Product.jsx","views/Cart.jsx","views/LogIn.jsx","views/SignUp.jsx","views/NotFound.jsx","components/Navigation.jsx","components/PropsRoute.jsx","App.jsx","index.js"],"names":["Home","props","randomProducts","arr","count","temp","index","shuffled","slice","i","length","min","Math","floor","random","getRandomArrayElements","products","react_default","a","createElement","style","margin","display","justifyContent","alignItems","flexDirection","width","maxWidth","carousel","autoplay","effect","map","product","src","img","key","id","alt","textTransform","letterSpacing","categories","category","Link","to","concat","slug","padding","es_button","size","name","ProductCard","_ref","card","cover","height","textAlign","fontSize","divider","color","parseFloat","price","toFixed","description","Category","withRouter","find","match","params","filter","flexWrap","ProductCard_ProductCard","ProductComponent","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","quantity","changeQuantity","setState","inherits","createClass","value","_this2","input_number","placeholder","onChange","onClick","addToCart","type","Component","Product","Cart","handleClick","e","preventDefault","removeFromCart","productsInCart","cart","productData","objectSpread","productsCost","reduce","b","table","columns","title","dataIndex","render","dataSource","pagination","locale","emptyText","LogInForm","handleSubmit","form","validateFields","err","values","console","log","getFieldDecorator","es_form","onSubmit","className","Item","rules","required","message","input","prefix","icon","valuePropName","initialValue","es_checkbox","htmlType","React","LogIn","Form","create","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","SignUpForm","agreed","validateFieldsAndScroll","handleCheckboxChange","assign","label","validator","validateToNextPassword","compareToFirstPassword","disabled","SignUp","NotFound","Navigation","collapsed","onCollapse","updateDimensions","window","innerWidth","updateScroll","scrollY","addEventListener","cartLength","layout","Sider","collapsible","menu","theme","mode","defaultSelectedKeys","SubMenu","PropsRoute","component","rest","objectWithoutProperties","Route","routeProps","finalProps","renderMergedProps","App","productId","updatedCart","newProduct","toConsumableArray","BrowserRouter","basename","process","minHeight","Navigation_Navigation","Content","background","Switch","PropsRoute_PropsRoute","exact","path","images","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2ea13ac2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Button } from 'antd';\n\n// function found on internet to get random elements from array\n// https://stackoverflow.com/questions/7158654/how-to-get-random-elements-from-an-array/7158691\nfunction getRandomArrayElements(arr, count) {\n    var shuffled = arr.slice(0),\n        i = arr.length,\n        min = i - count,\n        temp,\n        index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n\n// home component\nexport const Home = props => {\n\n    // get random 4 products\n    const randomProducts = getRandomArrayElements(props.products, 4);\n\n    return (\n        <div\n            style={{\n                margin: '-24px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexDirection: 'column',\n            }}\n        >\n            {/* show slider with randomProducts */}\n            <div style={{ width: '100%', maxWidth: 400 }}>\n                <Carousel autoplay effect=\"fade\">\n                    {randomProducts.map(product => (\n                        <img src={product.img} key={product.id} alt={product} />\n                    ))}\n                </Carousel>\n            </div>\n\n            <h1 style={{ textTransform: 'uppercase', letterSpacing: 2, margin: '32px 0' }}>\n                Moocny Shop\n            </h1>\n\n            {/* show all categories and display them as links to their views */}\n            {props.categories.map(category => (\n                <Link\n                    key={category.id}\n                    to={`/category/${category.slug}`}\n                    style={{ margin: '8px 0', padding: '0 24px', width: '100%' }}\n                >\n                    <Button style={{ width: '100%' }} size=\"large\">\n                        {category.name}\n                    </Button>\n                </Link>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Divider } from 'antd';\n\n// product card that is displayed on category view\nexport const ProductCard = ({ product }) => (\n    // link each product to his view\n    <Link to={`/product/${product.slug}`}>\n        <Card\n            style={{ width: 300, margin: 10 }}\n            cover={<img height={200} alt={product.name} src={product.img} />}\n        >\n            <div style={{ textAlign: 'center' }}>\n                <strong style={{ fontSize: 18 }}>{product.name}</strong>\n                <Divider />\n                <h2 style={{ color: 'gray', fontSize: 16 }}>\n                    {/* show product price with fixed comma */}\n                    {parseFloat(product.price).toFixed(2)} zł\n                </h2>\n                <p>{product.description}</p>\n            </div>\n        </Card>\n    </Link>\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Divider } from 'antd';\n\nimport { ProductCard } from '../components/ProductCard';\n\n// category\nconst CategoryComponent = props => {\n    // find category by slug from url\n    const category = props.categories.find(category => category.slug === props.match.params.slug);\n\n    // find products that are in the category by category id\n    const products = props.products.filter(product => product.category === category.id);\n\n    return (\n        <div>\n            <h1>{category.name}</h1>\n            <Divider />\n            <div\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexWrap: 'wrap',\n                }}\n            >\n                {/* for each product display product card component */}\n                {products.length > 0\n                    ? products.map(product => <ProductCard key={product.id} product={product} />)\n                    : 'No products found'}\n            </div>\n        </div>\n    );\n};\n\n// wrap category with router so it has access to route match params\nexport const Category = withRouter(CategoryComponent);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, InputNumber } from 'antd';\n\n// product component\nexport class ProductComponent extends Component {\n    // state that holds quantity\n    state = {\n        quantity: 1,\n    };\n\n    // save quantity to state\n    changeQuantity = quantity => this.setState({ quantity });\n\n    render() {\n        // find product from products data based on product slug from url\n        const product = this.props.products.find(\n            product => product.slug === this.props.match.params.slug\n        );\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                }}\n            >\n                <img\n                    style={{ width: '100%', maxWidth: 800 }}\n                    src={product.img}\n                    alt={product.name}\n                />\n                <h1 style={{ margin: '24px 0' }}>{product.name}</h1>\n                <h3 style={{ color: 'gray' }}>\n                    {(product.price * this.state.quantity).toFixed(2)} zł\n                </h3>\n                <div style={{ margin: '24px 0' }}>\n                    <InputNumber\n                        placeholder=\"Quantity\"\n                        value={this.state.quantity}\n                        // on input number change, save quantity\n                        onChange={this.changeQuantity}\n                    />\n\n                    <Button\n                        // on click, call addToCart function with product id and quantity\n                        onClick={() => this.props.addToCart(product.id, this.state.quantity)}\n                        type=\"primary\"\n                    >\n                        Add to cart\n                    </Button>\n                </div>\n                <h3>{product.description}</h3>\n            </div>\n        );\n    }\n}\n\nexport const Product = withRouter(ProductComponent);\n","import React, { Component } from 'react';\n\nimport { Table, Button } from 'antd';\n\n// define column layout for cart table\nconst columns = removeFromCart => [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Price',\n        dataIndex: 'price',\n        // show price in fixed comma with currency\n        render: price => `${parseFloat(price).toFixed(2)} zł`,\n    },\n    {\n        title: 'Quantity',\n        dataIndex: 'quantity',\n    },\n    {\n        dataIndex: 'id',\n        width: 50,\n        render: id => (\n            // button for removing item from cart\n            <Button type=\"danger\" onClick={e => removeFromCart(e, id)}>\n                Remove\n            </Button>\n        ),\n    },\n];\n\n// cart component\nexport class Cart extends Component {\n    handleClick = (e, id) => {\n        e.preventDefault();\n\n        this.props.removeFromCart(id);\n    };\n\n    render() {\n        // get data about products in cart\n        const productsInCart = this.props.cart.map(product => {\n            const productData = this.props.products.find(\n                productData => productData.id === product.id\n            );\n\n            return { ...product, ...productData };\n        });\n\n        // sum all of the products prices multiplied by quantity\n        const productsCost =\n            productsInCart.length > 0 &&\n            productsInCart.map(product => product.price * product.quantity).reduce((a, b) => a + b);\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                }}\n            >\n                <h1>Cart</h1>\n                <Table\n                    style={{ width: '100%' }}\n                    columns={columns(this.handleClick)}\n                    dataSource={productsInCart}\n                    pagination={false}\n                    locale={{ emptyText: 'Cart is empty' }}\n                />\n                <h3 style={{ margin: '16px 0' }}>\n                    {productsCost && <div>Total: {parseFloat(productsCost).toFixed(2)} zł</div>}\n                </h3>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\n// log in component\nclass LogInForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            // https://ant.design/components/form/\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                }}\n            >\n                <h1>Log In</h1>\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                        {getFieldDecorator('userName', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: 'Please input your Password!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('remember', {\n                            valuePropName: 'checked',\n                            initialValue: true,\n                        })(<Checkbox>Remember me</Checkbox>)}\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                        Or <Link to=\"/signup\">register now!</Link>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport const LogIn = Form.create({ name: 'normal_login' })(LogInForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Checkbox, Button } from 'antd';\n\n// grid layout and view from https://ant.design/components/form/\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 11 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 },\n    },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\n// signup component https://ant.design/components/form/\nclass SignUpForm extends React.Component {\n    state = {\n        agreed: false,\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    handleCheckboxChange = () => this.setState({ agreed: !this.state.agreed });\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                }}\n            >\n                <h1>Sign Up</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Item {...formItemLayout} label=\"E-mail\">\n                        {getFieldDecorator('email', {\n                            rules: [\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid e-mail',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your e-mail',\n                                },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Password\">\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please input your password',\n                                },\n                                {\n                                    validator: this.validateToNextPassword,\n                                },\n                            ],\n                        })(<Input type=\"password\" />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label=\"Confirm Password\">\n                        {getFieldDecorator('confirm', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please confirm your password',\n                                },\n                                {\n                                    validator: this.compareToFirstPassword,\n                                },\n                            ],\n                        })(<Input type=\"password\" />)}\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        {getFieldDecorator('agreement')(\n                            <Checkbox onChange={this.handleCheckboxChange}>\n                                I have read <Link to=\"/signup\">rules</Link>\n                            </Checkbox>\n                        )}\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={!this.state.agreed}>\n                            Register\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport const SignUp = Form.create()(SignUpForm);\n","import React from 'react';\n\nexport const NotFound = () => <div>Page Not Found</div>;\n","import React, { Component } from 'react';\nimport { Layout, Icon, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\n\n// navigation component\nexport class Navigation extends Component {\n    // state for menu collapse status\n    state = {\n        collapsed: false,\n    };\n\n    // toggle menu collapsed state\n    onCollapse = () =>\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n\n    // update collapse menu status on resize\n    updateDimensions = () => {\n        if (window.innerWidth < 768) {\n            this.setState({ collapsed: true });\n        } else {\n            this.setState({ collapsed: false });\n        }\n    };\n\n    // update collapse menu status on scroll\n    updateScroll = () => {\n        if (window.scrollY > 200) {\n            this.setState({ collapsed: true });\n        } else {\n            this.setState({ collapsed: false });\n        }\n    };\n\n    componentDidMount() {\n        // when component mounts, add resize and scroll event handlers\n        window.addEventListener('resize', this.updateDimensions);\n        window.addEventListener('scroll', this.updateScroll);\n\n        // when on mobile view, show collapsed menu from beginning\n        if (window.innerWidth < 768) {\n            this.setState({ collapsed: true });\n        }\n    }\n\n    render() {\n        const cartLength = this.props.cart.length;\n\n        return (\n            <Layout.Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n\n                {/* menu toggle button */}\n                <div\n                    style={{\n                        height: '32px',\n                        margin: '16px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '16px',\n                    }}\n                >\n                    <Icon\n                        style={{ color: 'white' }}\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.onCollapse}\n                    />\n                </div>\n\n                {/* menu */}\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['home']}>\n\n                    {/* cart with cart items count */}\n                    {cartLength > 0 && (\n                        <Menu.Item key=\"cart\">\n                            <Link to=\"/cart\">\n                                <Icon type=\"shopping-cart\" />\n                                <span>{`Cart ${cartLength > 0 ? `(${cartLength})` : ''}`}</span>\n                            </Link>\n                        </Menu.Item>\n                    )}\n\n                    {/* home */}\n                    <Menu.Item key=\"home\">\n                        <Link to=\"/\">\n                            <Icon type=\"home\" />\n                            <span>Home</span>\n                        </Link>\n                    </Menu.Item>\n\n                    {/* categories  */}\n                    <Menu.SubMenu\n                        key=\"categories\"\n                        title={\n                            <span>\n                                <Icon type=\"align-left\" />\n                                <span>Categories</span>\n                            </span>\n                        }\n                    >\n                        {/* show each of the category as a sub menu item */}\n                        {this.props.categories.map(category => (\n                            <Menu.Item key={category.id}>\n                                {/* link each menu category item to category url  */}\n                                <Link to={`/category/${category.slug}`}>{category.name}</Link>\n                            </Menu.Item>\n                        ))}\n                    </Menu.SubMenu>\n\n                    {/* account  */}\n                    <Menu.Item key=\"account\">\n                        <Link to=\"/account\">\n                            <Icon type=\"user\" />\n                            <span>Account</span>\n                        </Link>\n                    </Menu.Item>\n\n                </Menu>\n            </Layout.Sider>\n        );\n    }\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n// this component was found on stackoverflow\n// it's used to pass props to route components\n// https://github.com/ReactTraining/react-router/issues/4105\n\nconst renderMergedProps = (component, ...rest) => {\n    const finalProps = Object.assign({}, ...rest);\n    return React.createElement(component, finalProps);\n};\n\nexport const PropsRoute = ({ component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={routeProps => {\n                return renderMergedProps(component, routeProps, rest);\n            }}\n        />\n    );\n};\n","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// json data\nimport categories from './categories.json';\nimport products from './products.json';\n\n// views\nimport { Home } from './views/Home';\nimport { Category } from './views/Category';\nimport { Product } from './views/Product';\nimport { Cart } from './views/Cart';\nimport { LogIn } from './views/LogIn.jsx';\nimport { SignUp } from './views/SignUp.jsx';\nimport { NotFound } from './views/NotFound';\n\n// components\nimport { Navigation } from './components/Navigation';\nimport { PropsRoute } from './components/PropsRoute.jsx';\n\n// class for main component\nexport class App extends Component {\n    // main app state\n    state = {\n        categories, // loads categories data from categories.json\n        products, // loads products data from categories.json\n        cart: [], // will hold products data in the cart\n    };\n\n    // adds product to card by product id and quantity\n    addToCart = (productId, quantity) => {\n        // check if product is already in cart\n        const productInCart = this.state.cart.find(product => product.id === productId);\n\n        if (productInCart) {\n            // if yes, find it and update quantity\n            const updatedCart = this.state.cart.map(product => {\n                // find the product in cart array\n                if (product.id === productId) {\n                    // update its quantity\n                    return { ...product, quantity: product.quantity + quantity };\n                }\n\n                // leave other products as they are\n                return product;\n            });\n\n            // set updated cart state\n            this.setState({ cart: updatedCart });\n        } else {\n            // if no product with id is in cart, add new\n\n            // make new product object\n            const newProduct = {\n                id: productId,\n                quantity,\n            };\n\n            // set state with old cart products and new product\n            this.setState({ cart: [...this.state.cart, newProduct] });\n        }\n    };\n\n    // remove item from cart by id\n    removeFromCart = id => {\n        // filter cart array elements that match id\n        const updatedCart = this.state.cart.filter(product => product.id !== id);\n\n        // set cart state with updated cart\n        this.setState({ cart: updatedCart });\n    };\n\n    render() {\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL + '/'}>\n                {/* wrap app with browser router */}\n                <Layout style={{ minHeight: '100vh' }}>\n                    {/* pass categories and cart to navigation */}\n                    <Navigation categories={this.state.categories} cart={this.state.cart} />\n                    <Layout>\n                        <Layout.Content\n                            style={{\n                                margin: '24px 16px',\n                                padding: 24,\n                                background: '#fff',\n                            }}\n                        >\n                            {/* switch shows the view based by route */}\n                            <Switch>\n                                {/* home */}\n                                <PropsRoute\n                                    exact\n                                    path=\"/\"\n                                    component={Home}\n                                    products={this.state.products}\n                                    categories={this.state.categories}\n                                />\n\n                                {/* category */}\n                                <PropsRoute\n                                    exact\n                                    path=\"/category/:slug\"\n                                    component={Category}\n                                    categories={this.state.categories}\n                                    products={this.state.products}\n                                    images={this.state.images}\n                                />\n\n                                {/* product */}\n                                <PropsRoute\n                                    exact\n                                    path=\"/product/:slug\"\n                                    component={Product}\n                                    categories={this.state.categories}\n                                    products={this.state.products}\n                                    images={this.state.images}\n                                    addToCart={this.addToCart}\n                                />\n\n                                {/* cart */}\n                                <PropsRoute\n                                    exact\n                                    path=\"/cart\"\n                                    component={Cart}\n                                    products={this.state.products}\n                                    images={this.state.images}\n                                    cart={this.state.cart}\n                                    removeFromCart={this.removeFromCart}\n                                />\n\n                                {/* account */}\n                                <Route exact path=\"/account\" component={LogIn} />\n\n                                {/* signup */}\n                                <Route exact path=\"/signup\" component={SignUp} />\n\n                                {/* not found fallback */}\n                                <Route exact component={NotFound} />\n                            </Switch>\n                        </Layout.Content>\n                    </Layout>\n                </Layout>\n            </BrowserRouter>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import ant design css\nimport 'antd/dist/antd.css';\n\n// import custom css\nimport './index.css';\n\nimport { App } from './App';\n\n// render app component in html element with id root\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}